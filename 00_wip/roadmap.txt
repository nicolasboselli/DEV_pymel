-- Loup character relative
	-- skeleton
		--add pelvis between spine 1 and leg
		-- add head down before head and jaw
		-- replace jaw
		-- exclude spine1 and body from the skin. pelvis instead
		-- add follow ik for spine1 on ikfk spline

	-- body rig
		-- end reverse foot template
		-- correct pelvis in ikfkspline template
		-- make fk_chain template works on hierarchy
		
	-- eyes rig
	-- eyes blendshape: scale pupil
	-- ribbon
	-- facial blendshape (expression, labial, eyelid)
	-- theeth/tongue: additive rig/ blendshape
	-- facial additional rig: mouth, eyes, eyesbrow
	
	-- corrective blendshape
		-- quentin tools
	
	-- skinning
		-- quentin tools
	
	-- test character set
		-- to use in animation mixer
		-- to export/import anim
		-- to retarget animation
		-- to create selection set
		
	-- test human ik interface to create picker
	
	-- create picker
========================= Templates
-- fkChain.py
	x-- respect hierarchy
	x-- return root to link to deformation joint parent
	-- create ctrl on end controls

-- reverseFoot.py
	-- reverse foot template for ik.
	-- return root to link to deformation joint parent

-- ribbon.py
	-- add ribbon deformation system on additive rig
	-- look in existing joint to re use ribbon deformation system
	-- transfer skin weight from joint to ribbon

-- ikfk_spline.py
	-- add pelvis system on ik and fk chain
	-- add follow on ik mid ctrl
	-- add follow on fk chest
	-- add follow on ik base ctrl
	-- return root to link to deformation joint parent

-- IKFK.py
	-- add resize member attribute
	-- add squash
	x-- add manage vis connection
	-- return root to link to deformation joint parent
	
-- manageCtrls.py:
	-- def to change scale ctrl
	-- def to color control


-- how to connect different parts? alias
	-- create alias during rig contruction
	-- connect to parent joint in deformation system
	
-- eyes template
	-- with or without copy to origin for blendshape
	-- create aim with follow
	
-- additive cup, roll, spread for hand
	-- create hand template?

-- save skin + joint list + joint position

-- create loc/move/fly/body template creation

-- create complete rig from tag
	-- def to tag joint
	-- def to return part selections by tag
	-- apply rig def to selection



